public class NewBusinessTriggerHandler { 
    public static void Newbusinessrecordinsert(list<Opportunity> newlist){
        list<Opportunity> insertopp = new list<Opportunity>();
        id NewBusinessRecordId = [select id,name from RecordType where name='New Business'].id;
        id RenewalId = [select id,name from RecordType where name='Renewal'].id;

        for(opportunity renewalobj : newlist){
            if(renewalobj.RecordTypeId == NewBusinessRecordId && renewalobj.StageName == 'Closed Won'){
                opportunity obj = renewalobj.clone();
                obj.RecordTypeId = RenewalId;
                obj.StageName = 'Renewal';
                obj.Name = renewalobj.Name+'-Renewal';
                obj.CloseDate = renewalobj.CloseDate.addDays(30);
                insertopp.add(obj);
            }
        }
        if(!insertopp.isEmpty()){
      		insert insertopp;
    }
    }
    
   public static void Newbusinessrecordupdate(list<Opportunity> newlist, map<id,Opportunity> oldmap){
        list<Opportunity> updateopp = new list<Opportunity>();
        id NewBusinessRecordId =[select id,name from RecordType where name='New Business'].id;
        id RenewalId =[select id,name from RecordType where name='Renewal'].id; 
       
                // Get the original opportunities with InstallationFee
                for (OpportunityLineItem lineItem : [SELECT OpportunityId FROM OpportunityLineItem WHERE OpportunityId = :originId AND PricebookEntry.Product2.Name = 'InstallationFee']) {
                    oppsWithInstallationFee.add(lineItem.OpportunityId);
                }
        
                for (Opportunity renewalupdateobj : newlist) {
                    if (renewalupdateobj.StageName != oldmap.get(renewalupdateobj.id).StageName && renewalupdateobj.RecordTypeId == NewBusinessRecordId && renewalupdateobj.StageName == 'Closed Won') {
                        // Check if original opportunity has installation fee line item
                        if (oppsWithInstallationFee.contains(renewalupdateobj.Id)) {
                            opportunity obj = renewalupdateobj.clone();
                            obj.RecordTypeId = RenewalId;
                            obj.StageName = 'Renewal';
                            obj.Name = renewalupdateobj.Name + '-Renewal';
                            obj.CloseDate = renewalupdateobj.CloseDate.addDays(30);
                            obj.Parent_Opportunity__c = renewalupdateobj.id;
                            updateopp.add(obj);
        
                            renewalOpps.put(renewalupdateobj.Id, obj);
                        } else {
                            // Throw error if original opportunity doesn't have installation fee line item
                            renewalupdateobj.addError('Opportunity must have InstallationFee line item before being closed and cloned.');
                        }
                    }
                }
        
                //Check list then insert
                if (!updateopp.isEmpty()) {
                    insert updateopp;
                }
	}
}
